[
  {
    "objectID": "talks.html",
    "href": "talks.html",
    "title": "CV",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sagittis posuere ligula sit amet lacinia. Duis dignissim pellentesque magna, rhoncus congue sapien finibus mollis. Ut eu sem laoreet, vehicula ipsum in, convallis erat. Vestibulum magna sem, blandit pulvinar augue sit amet, auctor malesuada sapien. Nullam faucibus leo eget eros hendrerit, non laoreet ipsum lacinia. Curabitur cursus diam elit, non tempus ante volutpat a. Quisque hendrerit blandit purus non fringilla. Integer sit amet elit viverra ante dapibus semper. Vestibulum viverra rutrum enim, at luctus enim posuere eu. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus."
  },
  {
    "objectID": "blog/second-post/index.html",
    "href": "blog/second-post/index.html",
    "title": "Second Post",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis imperdiet massa tincidunt nunc pulvinar sapien et ligula. Amet cursus sit amet dictum sit amet. Eget duis at tellus at urna condimentum. Convallis aenean et tortor at risus viverra. Tincidunt ornare massa eget egestas purus viverra accumsan. Et malesuada fames ac turpis egestas. At imperdiet dui accumsan sit amet. Ut ornare lectus sit amet est placerat. Enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Duis ultricies lacus sed turpis tincidunt id aliquet risus. Mattis enim ut tellus elementum sagittis. Dui id ornare arcu odio ut. Natoque penatibus et magnis dis. Libero justo laoreet sit amet cursus sit. Sed faucibus turpis in eu. Tempus iaculis urna id volutpat lacus laoreet.\nPhasellus vestibulum lorem sed risus. Eget felis eget nunc lobortis mattis. Sit amet aliquam id diam maecenas ultricies. Egestas maecenas pharetra convallis posuere morbi. Etiam erat velit scelerisque in dictum non consectetur a erat. Cras fermentum odio eu feugiat pretium nibh ipsum consequat. Viverra accumsan in nisl nisi scelerisque. Et netus et malesuada fames ac. Amet tellus cras adipiscing enim eu turpis egestas pretium aenean. Eget lorem dolor sed viverra ipsum nunc aliquet. Ultrices dui sapien eget mi proin sed libero enim sed. Ultricies mi eget mauris pharetra et ultrices neque. Ipsum suspendisse ultrices gravida dictum. A arcu cursus vitae congue mauris rhoncus aenean vel. Gravida arcu ac tortor dignissim convallis. Nulla posuere sollicitudin aliquam ultrices."
  },
  {
    "objectID": "blog/post-20250712b/Index.html",
    "href": "blog/post-20250712b/Index.html",
    "title": "BLS CPI data: Understanding the cu.series file",
    "section": "",
    "text": "I downloaded the cu.series.txt file from https://download.bls.gov/pub/time.series/cu/ and converted the tab-delimited file to a csv. The file has 8,103 rows and 13 variables. The thirteen variables and first two rows are printed below.\n\n\n [1] \"series_id\"        \"area_code\"        \"item_code\"        \"seasonal\"        \n [5] \"periodicity_code\" \"base_code\"        \"base_period\"      \"series_title\"    \n [9] \"footnote_codes\"   \"begin_year\"       \"begin_period\"     \"end_year\"        \n[13] \"end_period\"      \n\n\n\n\n\n\n\n\nseries_id\narea_code\nitem_code\nseasonal\nperiodicity_code\nbase_code\nbase_period\nseries_title\nfootnote_codes\nbegin_year\nbegin_period\nend_year\nend_period\n\n\n\n\nCUSR0000SA0\n0000\nSA0\nS\nR\nS\n1982-84=100\nAll items in U.S. city average, all urban consumers, seasonally adjusted\nNA\n1947\nM01\n2025\nM04\n\n\nCUSR0000SA0E\n0000\nSA0E\nS\nR\nS\n1982-84=100\nEnergy in U.S. city average, all urban consumers, seasonally adjusted\nNA\n1957\nM01\n2025\nM04"
  },
  {
    "objectID": "blog/post-20250712b/Index.html#loading-the-cu.series-file",
    "href": "blog/post-20250712b/Index.html#loading-the-cu.series-file",
    "title": "BLS CPI data: Understanding the cu.series file",
    "section": "",
    "text": "I downloaded the cu.series.txt file from https://download.bls.gov/pub/time.series/cu/ and converted the tab-delimited file to a csv. The file has 8,103 rows and 13 variables. The thirteen variables and first two rows are printed below.\n\n\n [1] \"series_id\"        \"area_code\"        \"item_code\"        \"seasonal\"        \n [5] \"periodicity_code\" \"base_code\"        \"base_period\"      \"series_title\"    \n [9] \"footnote_codes\"   \"begin_year\"       \"begin_period\"     \"end_year\"        \n[13] \"end_period\"      \n\n\n\n\n\n\n\n\nseries_id\narea_code\nitem_code\nseasonal\nperiodicity_code\nbase_code\nbase_period\nseries_title\nfootnote_codes\nbegin_year\nbegin_period\nend_year\nend_period\n\n\n\n\nCUSR0000SA0\n0000\nSA0\nS\nR\nS\n1982-84=100\nAll items in U.S. city average, all urban consumers, seasonally adjusted\nNA\n1947\nM01\n2025\nM04\n\n\nCUSR0000SA0E\n0000\nSA0E\nS\nR\nS\n1982-84=100\nEnergy in U.S. city average, all urban consumers, seasonally adjusted\nNA\n1957\nM01\n2025\nM04"
  },
  {
    "objectID": "blog/post-20250712b/Index.html#details-about-the-dataset",
    "href": "blog/post-20250712b/Index.html#details-about-the-dataset",
    "title": "BLS CPI data: Understanding the cu.series file",
    "section": "Details about the dataset",
    "text": "Details about the dataset\n\nThere are 8,103 series id’s and 13 variables\nThe seasonal and periodicity_code are categorical variables each containing two cases.\n\nThe seasonal variable equals “S” for seasonally adjusted and “U” for unadjusted. There are 325 seasonally adjusted series and 7,778 unadjusted series.\nThe periodicity code is “R” for monthly and “S” for semi-annual. There are 4,202 series with monthly data and 3,901 with semi-annual data.\n\nThe item codes are useful for selecting the same category of CPI across geographic region or city. For example, the item code “SAH” represents “housing”; by selecting all the rows with item code “SAH” we can select all the housing code CPI indexes.\nArea codes\n\nThere are 58 unique area codes\nThe area code “0000” is the U.S. city average\nIt is only the area code “0000” that has seasonally adjusted CPI indexes\nThe numerical area codes running from “0100” to “0490” represent the census regions https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf\nThe four largest regions are Northeast (“0100”), Midwest (“0200”), South (“0300”) and West (“0400”)\nCensus divisions within each region are represented by the first two digits of the region and an additional two digits for the division. For example, the Northeast is “0100” and Division 1, New England is “0110” and Division 2, Middle Atlantic is “0120”, etc.\nThe area codes of Class D urban areas (populations between 2,500 and 49,999) begin with the letter D.\nThe area codes of Class B/C urban areas (population less than 2.5 million) begin with the letter N.\nThe area codes of Class A urban areas (population more than 2.5 million) begin with the letter S.\n\nThe base period is the year and month that the index equals 100.\nThe begin and end period is a string beginning with the letter “M” for the month and two digits that represent the month of the year, e.g. “M04” denotes April. In some datasets, the variable “M13” is used to denote the average value for the year.\n\n\n\n\n\n\n\n\n\narea_code\narea_name\nCount\nSA\nNSA\nMonthly\nSemi-Annual\n\n\n\n\n0000\nU.S. city average\n1115\n325\n790\n725\n390\n\n\n0100\nNortheast\n156\n0\n156\n78\n78\n\n\n0110\nNew England\n122\n0\n122\n61\n61\n\n\n0120\nMiddle Atlantic\n122\n0\n122\n61\n61\n\n\n0200\nMidwest\n156\n0\n156\n78\n78\n\n\n0230\nEast North Central\n122\n0\n122\n61\n61\n\n\n0240\nWest North Central\n122\n0\n122\n61\n61\n\n\n0300\nSouth\n156\n0\n156\n78\n78\n\n\n0350\nSouth Atlantic\n122\n0\n122\n61\n61\n\n\n0360\nEast South Central\n122\n0\n122\n61\n61\n\n\n0370\nWest South Central\n122\n0\n122\n61\n61\n\n\n0400\nWest\n156\n0\n156\n78\n78\n\n\n0480\nMountain\n122\n0\n122\n61\n61\n\n\n0490\nPacific\n122\n0\n122\n61\n61\n\n\nA104\nPittsburgh, PA\n96\n0\n96\n45\n51\n\n\nA210\nCleveland-Akron, OH\n102\n0\n102\n51\n51\n\n\nA212\nMilwaukee-Racine, WI\n95\n0\n95\n44\n51\n\n\nA213\nCincinnati-Hamilton, OH-KY-IN\n95\n0\n95\n44\n51\n\n\nA214\nKansas City, MO-KS\n95\n0\n95\n44\n51\n\n\nA311\nWashington-Baltimore, DC-MD-VA-WV\n100\n0\n100\n50\n50\n\n\nA421\nLos Angeles-Riverside-Orange County, CA\n102\n0\n102\n51\n51\n\n\nA425\nPortland-Salem, OR-WA\n95\n0\n95\n44\n51\n\n\nD000\nSize Class D\n140\n0\n140\n70\n70\n\n\nD200\nMidwest - Size Class D\n102\n0\n102\n51\n51\n\n\nD300\nSouth - Size Class D\n102\n0\n102\n51\n51\n\n\nN000\nSize Class B/C\n154\n0\n154\n77\n77\n\n\nN100\nNortheast - Size Class B/C\n122\n0\n122\n61\n61\n\n\nN200\nMidwest - Size Class B/C\n122\n0\n122\n61\n61\n\n\nN300\nSouth - Size Class B/C\n122\n0\n122\n61\n61\n\n\nN400\nWest - Size Class B/C\n122\n0\n122\n61\n61\n\n\nS000\nSize Class A\n156\n0\n156\n78\n78\n\n\nS100\nNortheast - Size Class A\n124\n0\n124\n62\n62\n\n\nS11A\nBoston-Cambridge-Newton, MA-NH\n122\n0\n122\n61\n61\n\n\nS12A\nNew York-Newark-Jersey City, NY-NJ-PA\n124\n0\n124\n62\n62\n\n\nS12B\nPhiladelphia-Camden-Wilmington, PA-NJ-DE-MD\n124\n0\n124\n62\n62\n\n\nS200\nMidwest - Size Class A\n124\n0\n124\n62\n62\n\n\nS23A\nChicago-Naperville-Elgin, IL-IN-WI\n124\n0\n124\n62\n62\n\n\nS23B\nDetroit-Warren-Dearborn, MI\n124\n0\n124\n62\n62\n\n\nS24A\nMinneapolis-St.Paul-Bloomington, MN-WI\n124\n0\n124\n62\n62\n\n\nS24B\nSt. Louis, MO-IL\n124\n0\n124\n62\n62\n\n\nS300\nSouth - Size Class A\n124\n0\n124\n62\n62\n\n\nS35A\nWashington-Arlington-Alexandria, DC-VA-MD-WV\n124\n0\n124\n62\n62\n\n\nS35B\nMiami-Fort Lauderdale-West Palm Beach, FL\n124\n0\n124\n62\n62\n\n\nS35C\nAtlanta-Sandy Springs-Roswell, GA\n124\n0\n124\n62\n62\n\n\nS35D\nTampa-St. Petersburg-Clearwater, FL\n124\n0\n124\n62\n62\n\n\nS35E\nBaltimore-Columbia-Towson, MD\n124\n0\n124\n62\n62\n\n\nS37A\nDallas-Fort Worth-Arlington, TX\n124\n0\n124\n62\n62\n\n\nS37B\nHouston-The Woodlands-Sugar Land, TX\n124\n0\n124\n62\n62\n\n\nS400\nWest - Size Class A\n124\n0\n124\n62\n62\n\n\nS48A\nPhoenix-Mesa-Scottsdale, AZ\n124\n0\n124\n62\n62\n\n\nS48B\nDenver-Aurora-Lakewood, CO\n124\n0\n124\n62\n62\n\n\nS49A\nLos Angeles-Long Beach-Anaheim, CA\n124\n0\n124\n62\n62\n\n\nS49B\nSan Francisco-Oakland-Hayward, CA\n124\n0\n124\n62\n62\n\n\nS49C\nRiverside-San Bernardino-Ontario, CA\n122\n0\n122\n61\n61\n\n\nS49D\nSeattle-Tacoma-Bellevue WA\n124\n0\n124\n62\n62\n\n\nS49E\nSan Diego-Carlsbad, CA\n124\n0\n124\n62\n62\n\n\nS49F\nUrban Hawaii\n124\n0\n124\n62\n62\n\n\nS49G\nUrban Alaska\n124\n0\n124\n62\n62"
  },
  {
    "objectID": "blog/post-20250712b/Index.html#miscellaneous-links",
    "href": "blog/post-20250712b/Index.html#miscellaneous-links",
    "title": "BLS CPI data: Understanding the cu.series file",
    "section": "Miscellaneous links",
    "text": "Miscellaneous links\n\nAggregation level https://www.bls.gov/cpi/additional-resources/cpi-item-aggregation.htm\nInfo about area indexes https://www.bls.gov/opub/hom/cpi/presentation.htm\nThe list of CPI indexes that are published monthly https://www.bls.gov/cpi/additional-resources/index-publication-level.htm"
  },
  {
    "objectID": "blog/post-20250710/index.html",
    "href": "blog/post-20250710/index.html",
    "title": "Introduction BLS CPI data",
    "section": "",
    "text": "The landing page for the Consumer Price Index (CPI) is https://www.bls.gov/cpi/. To access the underlying data, select “Databases” within the drop down menu of the “CPI Data” tab to open https://www.bls.gov/cpi/data.htm .\nI am interested in the “All Urban consumers (Current Series)”, so I clicked on the text icon on the right-hand side which opens the directory https://download.bls.gov/pub/time.series/cu/\nThe “cu.txt” file contains information on the structure of the CPI code. The CPI code consists of five elements:\n\nsurvey abbreviation, e.g. “CU” represents urban consumers\n\nseasonal (code), “S” denotes seasonally adjusted, “R” denotes seasonally unadjusted. These are summarized in the “cu.seasonal” text file.\n\nperiodicity code: “R” denotes monthly and “S” denotes semi-annual\n\narea_code: “0000” denotes “U.S. city average” and other codes are listed in “cu.area”text file.\nitem_code : “SAO” denotes “All items” and other codes are listed in item “cu.item” text file.\n\nThe file “cu.series” contains a taxonomy of all the CPI indexes that includes the five elements list above, the series title and additional information about the start- and end-date of the series,\nBefore exploring more of the files in https://download.bls.gov/pub/time.series/cu/ we will review the relative importance page to gain a better understanding of some of the key components of the CPI. One can access this page starting at https://www.bls.gov/cpi/ and selecting “Tables” in the “CPI Data” dropdown menu, and then clicking on the link under “Relative importance and weights”.\nDownload the xlsx file under the “Relative Importance” heading to obtain the weights of the sub-indexes within the “All items” index. The worksheet labelled “Table 1” contains the weights in the urban consumer CPI (CPI-U) and the clerical workers CPI (CPI-W). The first column lists the level of aggregation of the index that runs from level 1 (the most aggregated) to level 8 (the least aggregated). Of the 322 indexes, we will ignore the 27 indexes listed under “special aggregate indexes” and review the level 1 indexes that remain. The eight level 1 indexes and their weights are listed in the table below\n\n\n\nRelative importance of Level 1 CPI indexes\n\n\nThe weights sum to 100 for both the CPI-U and CPI-W indexes.\nReturning to https://download.bls.gov/pub/time.series/cu/ you will notice that each of the level 1 indexes has a file that contains data. For example, “cu.11.USFoodBeverage” contains the time series data of all the indexes within the Food and beverage level 1 CPI index. The data is in the tidy format and includes the series id, year, period, value and footnote codes. The period is defined in the cu.period text file."
  },
  {
    "objectID": "blog/post-20250710/index.html#introduction",
    "href": "blog/post-20250710/index.html#introduction",
    "title": "Introduction BLS CPI data",
    "section": "",
    "text": "The landing page for the Consumer Price Index (CPI) is https://www.bls.gov/cpi/. To access the underlying data, select “Databases” within the drop down menu of the “CPI Data” tab to open https://www.bls.gov/cpi/data.htm .\nI am interested in the “All Urban consumers (Current Series)”, so I clicked on the text icon on the right-hand side which opens the directory https://download.bls.gov/pub/time.series/cu/\nThe “cu.txt” file contains information on the structure of the CPI code. The CPI code consists of five elements:\n\nsurvey abbreviation, e.g. “CU” represents urban consumers\n\nseasonal (code), “S” denotes seasonally adjusted, “R” denotes seasonally unadjusted. These are summarized in the “cu.seasonal” text file.\n\nperiodicity code: “R” denotes monthly and “S” denotes semi-annual\n\narea_code: “0000” denotes “U.S. city average” and other codes are listed in “cu.area”text file.\nitem_code : “SAO” denotes “All items” and other codes are listed in item “cu.item” text file.\n\nThe file “cu.series” contains a taxonomy of all the CPI indexes that includes the five elements list above, the series title and additional information about the start- and end-date of the series,\nBefore exploring more of the files in https://download.bls.gov/pub/time.series/cu/ we will review the relative importance page to gain a better understanding of some of the key components of the CPI. One can access this page starting at https://www.bls.gov/cpi/ and selecting “Tables” in the “CPI Data” dropdown menu, and then clicking on the link under “Relative importance and weights”.\nDownload the xlsx file under the “Relative Importance” heading to obtain the weights of the sub-indexes within the “All items” index. The worksheet labelled “Table 1” contains the weights in the urban consumer CPI (CPI-U) and the clerical workers CPI (CPI-W). The first column lists the level of aggregation of the index that runs from level 1 (the most aggregated) to level 8 (the least aggregated). Of the 322 indexes, we will ignore the 27 indexes listed under “special aggregate indexes” and review the level 1 indexes that remain. The eight level 1 indexes and their weights are listed in the table below\n\n\n\nRelative importance of Level 1 CPI indexes\n\n\nThe weights sum to 100 for both the CPI-U and CPI-W indexes.\nReturning to https://download.bls.gov/pub/time.series/cu/ you will notice that each of the level 1 indexes has a file that contains data. For example, “cu.11.USFoodBeverage” contains the time series data of all the indexes within the Food and beverage level 1 CPI index. The data is in the tidy format and includes the series id, year, period, value and footnote codes. The period is defined in the cu.period text file."
  },
  {
    "objectID": "blog/post-20250710/index.html#adding-descriptions-to-the-cpi-data",
    "href": "blog/post-20250710/index.html#adding-descriptions-to-the-cpi-data",
    "title": "Introduction BLS CPI data",
    "section": "Adding descriptions to the CPI data",
    "text": "Adding descriptions to the CPI data\nFor the purposes of automating report creation, I tried to use the files available on the BLS website without much preprocessing outside of R. The tab-delimited cu.series.txt file is very useful, but I cannot load it without running into an error so I have created a csv version that works better. The three most useful variables are: series_id, area_code and series_title. I want to focus on the seasonally adjusted U.S. urban consumer price index so I need to select the series_id that begins with “CU”, select the area_code that equals 0 , and the seasonal code that equals “S”.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(ggpubr)\n\npath &lt;- \"G:\\\\My Drive\\\\Research\\\\Inflation\\\\\"\n\ndfs &lt;- read.csv(paste0(path,\"cu.series.csv\"))\n\ndf &lt;- dfs[grepl(\"CU\",dfs$series_id),]\n\ndf &lt;- df[df$area_code == \"0\",]\n\ndf &lt;- df[df$seasonal == \"S\",]\n\ndf$short_name &lt;- str_replace(df$series_title,\" in U.S. city average, all urban consumers, seasonally adjusted\",\"\")\n\nhead(df[,c(\"series_id\",\"short_name\")])\n\n\n\n#Read in Apparel CPI and calculate annual percentage change\n\ndA &lt;- read.table(paste0(path,\"cu.data.13.USApparel.txt\"), sep=\"\\t\", header = TRUE)\n\ndA$Date &lt;- as.Date(paste0(dA$year,\"-\",substr(dA$period,2,3),\"-01\"),format = \"%Y-%m-%d\")\n\ndA &lt;- dA[grepl(\"CUS\",dA$series_id),]\n\ndA &lt;- dA %&gt;%   arrange(series_id,Date) %&gt;%\n   mutate(\n    percentage_change = (value - lag(value,n=12)) / lag(value,n=12) * 100\n  )\n\ndA &lt;- merge(dA,df[,c(\"series_id\",\"short_name\")], by.x=\"series_id\",by.y=\"series_id\",all.x=TRUE)\n\ndB &lt;- dA[dA$Date &gt; as.Date(\"2000-01-01\"),]\n\nvar &lt;- unique(dB$series_id)\n\nfiglist &lt;- list()\n\nfor(kv in (1:length(var))){\n  \n  figlist[[kv]] &lt;- ggplot(data = dB[dB$series_id==var[kv],],\n                          mapping = aes(x=Date,y=percentage_change )) +\n    geom_line() +\n      theme_light() + \n    theme(plot.background = element_blank(),\n          panel.background = element_blank(),\n          axis.title.x = element_blank(),\n          legend.position = \"none\",\n          plot.title = element_text(hjust = 0.5)) +\n    ylab(\"Annual Inflation\") +\n    ggtitle(dB[dB$series_id==var[kv],]$short_name) + \n    geom_hline(yintercept=2, linetype=\"dashed\",\n               color = \"red\", linewidth=1)\n  \n}\n\nggarrange(figlist[[1]],figlist[[2]],figlist[[3]],figlist[[4]],nrow=2,ncol=2)"
  },
  {
    "objectID": "blog/post-20250710/index.html#miscellaneous",
    "href": "blog/post-20250710/index.html#miscellaneous",
    "title": "Introduction BLS CPI data",
    "section": "Miscellaneous",
    "text": "Miscellaneous\n\nitem descriptions Each item code is defined."
  },
  {
    "objectID": "blog/post-20250504/index.html",
    "href": "blog/post-20250504/index.html",
    "title": "Trade Data",
    "section": "",
    "text": "The Census Bureau has an API for downloading trade data. There are five components to the API:\n\nThe base url\nThe choice of imports or exports\nThe endpoint, i.e. one of nine commodity classification systems.\nThe variables you want to download\nThe filter\n\nLet’s begin with a simple example. What are the US exports of Soybeans in the most recent FT900 trade report?\nThe base url is “https://api.census.gov/data/timeseries/intltrade” and then there are four levels of information\n\nWe are choosing “exports”\nWe are using the “enduse” classification system for the ft900 report\nThe variables are:\n\n\n“E_ENDUSE_SDESC” - a short description of the commodity\n“ALL_VAL_MO” - the dollar amount exported\n“CTY_CODE” - the country code for the soy exports\n“CTY_NAME” - the country name for the exports\n\n\nThe filter\n\n\n“E_ENDUSE=111110” - the enduse code for soybeans\n“time=2025-03” - the year and month\n\n\nbase &lt;- \"https://api.census.gov/data/timeseries/intltrade\"\n\nl1 &lt;- \"exports\"\nl2 &lt;- \"enduse\"\nl3 &lt;- \"E_ENDUSE_SDESC,ALL_VAL_MO,CTY_CODE,CTY_NAME\"\nl4 &lt;- \"time=2025-03&E_ENDUSE=111110\"\n\napi_call &lt;- paste0(base,l1,\"/\",l2,\"?get=\",l3,\"&\",l4)\n\nprint(api_call)\n\nThe api_call has the following url:\nhttps://api.census.gov/data/timeseries/intltrade/exports/enduse?get=E_ENDUSE_SDESC,ALL_VAL_MO,CTY_CODE,CTY_NAME&time=2025-03&E_ENDUSE=111110\nThe api call can be pasted into a browser to download the data, but it is easier to read into R and create a data frame.\n\nlibrary (httr)\nlibrary (jsonlite)\n\nres &lt;- GET(api_call)\n\nx &lt;-rawToChar(res$content)\n\npredf &lt;- fromJSON(rawToChar(res$content))\n\ndf &lt;- as.data.frame(predf[2:nrow(predf), ])\nnames(df) &lt;- predf[1, ]\n\nhead(df)"
  },
  {
    "objectID": "blog/first-post/index.html",
    "href": "blog/first-post/index.html",
    "title": "First Post",
    "section": "",
    "text": "Sed risus ultricies tristique nulla aliquet. Neque volutpat ac tincidunt vitae semper quis lectus nulla.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Enim sed faucibus turpis in eu mi bibendum neque. Ac orci phasellus egestas tellus rutrum tellus pellentesque eu. Velit sed ullamcorper morbi tincidunt ornare massa. Sagittis id consectetur purus ut faucibus pulvinar elementum integer. Tincidunt nunc pulvinar sapien et ligula ullamcorper malesuada proin libero. Lobortis feugiat vivamus at augue eget arcu. Aliquam ut porttitor leo a diam sollicitudin tempor id eu. Mauris a diam maecenas sed enim ut sem viverra aliquet. Enim ut tellus elementum sagittis vitae et leo duis. Molestie at elementum eu facilisis sed odio morbi quis commodo. Sapien pellentesque habitant morbi tristique senectus. Quam vulputate dignissim suspendisse in est. Nulla pellentesque dignissim enim sit amet venenatis urna cursus eget.\nVelit aliquet sagittis id consectetur purus ut faucibus pulvinar elementum. Viverra mauris in aliquam sem fringilla ut morbi tincidunt augue. Tortor at auctor urna nunc id. Sit amet consectetur adipiscing elit duis tristique sollicitudin. Aliquet nibh praesent tristique magna sit amet purus. Tristique senectus et netus et malesuada fames ac turpis. Hac habitasse platea dictumst quisque. Auctor neque vitae tempus quam pellentesque nec nam aliquam. Ultrices tincidunt arcu non sodales neque sodales ut etiam. Iaculis at erat pellentesque adipiscing. Cras tincidunt lobortis feugiat vivamus. Nisi est sit amet facilisis magna etiam. Pharetra pharetra massa massa ultricies mi quis hendrerit. Vitae sapien pellentesque habitant morbi tristique senectus. Ornare aenean euismod elementum nisi quis eleifend quam adipiscing vitae."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I was born and raised in South Africa and completed a B.Sc(Hons) (Statistics) and MA (Economics) at the University of Cape Town. After spending two years at Simon Fraser University, I transferred to the University of Rochester where I completed a Phd in Economics (Econometrics, Finance). I was a tenure track Assistant Professor at Emory University for five years before moving to New York City to work in the Financial Services Industry. I spent 10 years building prepay and default models for non-agency MBS at Citi and AllianceBernstein followed by 10 years in quantitative risk management at TIAA."
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nAuthor\n\n\n\n\n\n\n\n\nJul 12, 2025\n\n\nBLS CPI data: Understanding the cu.series file\n\n\nOwen \n\n\n\n\n\n\nAug 11, 2025\n\n\nCensus Bureau API: Baby Carriages\n\n\nOwen \n\n\n\n\n\n\nJul 12, 2025\n\n\nComitting project to github from RStudio\n\n\nOwen \n\n\n\n\n\n\nAug 6, 2025\n\n\nDecomposing Headline and Core CPI\n\n\nOwen \n\n\n\n\n\n\nAug 3, 2025\n\n\nDecomposing the All items (Headline) CPI Index\n\n\nOwen \n\n\n\n\n\n\nAug 4, 2025\n\n\nDecomposing the All items (Headline) CPI Index (v.2)\n\n\nOwen \n\n\n\n\n\n\nOct 14, 2025\n\n\nETA 539 - Weekly Claims and Extended Benefits Trigger Data”\n\n\nOwen Beelders\n\n\n\n\n\n\nMay 22, 2021\n\n\nFirst Post\n\n\nAlicia \n\n\n\n\n\n\nJul 10, 2025\n\n\nIntroduction BLS CPI data\n\n\nOwen \n\n\n\n\n\n\nAug 11, 2025\n\n\nIntroduction to Census trade data API”\n\n\nOwen \n\n\n\n\n\n\nMay 23, 2021\n\n\nSecond Post\n\n\nAlicia \n\n\n\n\n\n\nMay 24, 2021\n\n\nThird Blog Post\n\n\nAlicia \n\n\n\n\n\n\nMay 4, 2025\n\n\nTrade Data\n\n\nOwen \n\n\n\n\n\n\nMay 4, 2025\n\n\nTrade Data\n\n\nOwen \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/post-20250515/index.html",
    "href": "blog/post-20250515/index.html",
    "title": "Trade Data",
    "section": "",
    "text": "Let’s test the api within the blog\n\nlibrary (httr)\n\nWarning: package 'httr' was built under R version 4.3.3\n\nlibrary (jsonlite)\n\nWarning: package 'jsonlite' was built under R version 4.3.3\n\n#library (tidyverse)\n#library (ggplot2)\n\nbase &lt;- \"https://api.census.gov/data/timeseries/intltrade/\"\n\nl1 &lt;- \"imports\"\nl2 &lt;- \"hs\"\nl3 &lt;- \"I_COMMODITY_SDESC,GEN_VAL_YR,CTY_CODE,CTY_NAME\"\nl4 &lt;- \"time=from+2024-01&I_COMMODITY=87150*\"\n\napi_call &lt;- paste0(base,l1,\"/\",l2,\"?get=\",l3,\"&\",l4)\n\nres &lt;- GET(api_call)\n\npredf &lt;- fromJSON(rawToChar(res$content))\n\ndf &lt;- as.data.frame(predf[2:nrow(predf), ])\nnames(df) &lt;- predf[1, ]\n\ndf$GEN_VAL_YR &lt;- as.numeric(df$GEN_VAL_YR)\n\nhead(df)\n\n                                 I_COMMODITY_SDESC GEN_VAL_YR CTY_CODE\n1 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF   35654928        -\n2 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     183241     0021\n3 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     131842     0003\n4 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF   35337098     0014\n5 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     183241     0020\n6 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     318051     0022\n                         CTY_NAME    time I_COMMODITY\n1         TOTAL FOR ALL COUNTRIES 2024-01      871500\n2 TWENTY LATIN AMERICAN REPUBLICS 2024-01      871500\n3                  EUROPEAN UNION 2024-01      871500\n4           PACIFIC RIM COUNTRIES 2024-01      871500\n5                   USMCA (NAFTA) 2024-01      871500\n6                            OECD 2024-01      871500"
  },
  {
    "objectID": "blog/post-20250712/Index.html",
    "href": "blog/post-20250712/Index.html",
    "title": "Comitting project to github from RStudio",
    "section": "",
    "text": "Introduction\nI have struggled to blog regularly. As a consequence, I run into technology issues. On July 10th I wrote a blog and used the “Environment, Histor, ..” pane to commit my changes to git hub, but I received the following error\n\n\n\nCommit Error\n\n\nI shelved the decision to commit and waited until Saturday morning to learn more about gpg. I found the github pages to set up the key etc. and then I turned to RStudio to figure out how to add the key. A google search lead me to the fact that RStudio is set up for ssh and not gpg. I then set up a new ssh key within RStudio using the Tools &gt; Global Options &gt; Git/SVN &gt; Create SSH Key steps.\n\n\n\nCreate ssh key\n\n\nWhat I also remembered is that when I watched a video on setting up quarto for blogging, commits were done via the terminal window. So what worked for me is the following two lines at the command line:\ngit commit -m “commit message”\ngit push origin main\nwhere you specify the relevant “commit message”.\nIt’s actually quite simple if you know what you are doing, and waste countless hours if you don’t."
  },
  {
    "objectID": "blog/post-20250803/Index.html",
    "href": "blog/post-20250803/Index.html",
    "title": "Decomposing the All items (Headline) CPI Index",
    "section": "",
    "text": "The Relative Importance page of the BLS CPI website provides a spreadsheet of the weights of the components of the CPI index. These weights can be used to decompose aggregate indexes into changes of their components.\nThe most important decomposition of the CPI index is that of headline inflation into core inflation plus energy and food inflation.\nWhat other decompositions exist?\nFirst, by focusing on the “Special aggregate indexes” in table 1 of the Relative Importance spreadsheet we can construct the following groups of indexes that add up to the “All items” index. The easiest starting point is the group of indexes whose title begins with “All items less…”\n\nAll items less food\nAll items less shelter\nAll items less medical care\nAll items less energy\nAll items less food and energy\n\nBeside the above five indexes and the decomposition of Headline (all items) into core, we also have a breakdown of headline into commodities (goods) and services inflation.\n\nSecond, if we ignore the “Special aggregate indexes” and group all the “Indent Level” 1 indexes, we obtain the following set of sub-indexes that add up to 100:\n\nThese eight indexes can be further decomposed into the key contributors. (We have also included the decomposition of food into food at home and away from home, thus there are nine groupings.)"
  },
  {
    "objectID": "blog/post-20250803/Index.html#introduction",
    "href": "blog/post-20250803/Index.html#introduction",
    "title": "Decomposing the All items (Headline) CPI Index",
    "section": "",
    "text": "The Relative Importance page of the BLS CPI website provides a spreadsheet of the weights of the components of the CPI index. These weights can be used to decompose aggregate indexes into changes of their components.\nThe most important decomposition of the CPI index is that of headline inflation into core inflation plus energy and food inflation.\nWhat other decompositions exist?\nFirst, by focusing on the “Special aggregate indexes” in table 1 of the Relative Importance spreadsheet we can construct the following groups of indexes that add up to the “All items” index. The easiest starting point is the group of indexes whose title begins with “All items less…”\n\nAll items less food\nAll items less shelter\nAll items less medical care\nAll items less energy\nAll items less food and energy\n\nBeside the above five indexes and the decomposition of Headline (all items) into core, we also have a breakdown of headline into commodities (goods) and services inflation.\n\nSecond, if we ignore the “Special aggregate indexes” and group all the “Indent Level” 1 indexes, we obtain the following set of sub-indexes that add up to 100:\n\nThese eight indexes can be further decomposed into the key contributors. (We have also included the decomposition of food into food at home and away from home, thus there are nine groupings.)"
  },
  {
    "objectID": "blog/third-post/index.html",
    "href": "blog/third-post/index.html",
    "title": "Third Blog Post",
    "section": "",
    "text": "The source for any page in your website could also be a Jupyter Notebook. This one is third-post/index.ipynb.\nHere’s an example I borrowed from the Seaborn docs:\n\nimport seaborn as sns\n\nsns.set_theme(style=\"whitegrid\")\n\n# Load the diamonds dataset\ndiamonds = sns.load_dataset(\"diamonds\")\n\n# Plot the distribution of clarity ratings, conditional on carat\nsns.displot(\n    data=diamonds,\n    x=\"carat\", hue=\"cut\",\n    kind=\"kde\", height=4, aspect=1.5,\n    multiple=\"fill\", clip=(0, None),\n    palette=\"ch:rot=-.25,hue=1,light=.75\",   \n)"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Predicting House Prices with Machine Learning\n\n\n\nPython\n\n\nMachine Learning\n\n\nData Cleaning\n\n\n\nThis project involves using machine learning algorithms to predict house prices based on various features such as location, size, and amenities. It includes data cleaning, feature engineering, and model selection.\n\n\n\nJan 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomer Segmentation Using Clustering Techniques\n\n\n\nR\n\n\nMachine Learning\n\n\nClustering\n\n\nStatistical Modelling\n\n\n\nThis project focuses on segmenting customers into different groups based on their purchasing behavior and demographics. It uses clustering algorithms like K-means and hierarchical clustering to identify distinct customer segments.\n\n\n\nApr 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing Global CO2 Emissions\n\n\n\nR\n\n\nData Visualization\n\n\nEnvironmental Science\n\n\n\nThis project involves creating visualizations to show trends in global CO2 emissions over time. It includes data extraction from public databases, data cleaning, and using visualization libraries to create interactive charts and graphs.\n\n\n\nJul 1, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/post-20250804/Index.html",
    "href": "blog/post-20250804/Index.html",
    "title": "Decomposing the All items (Headline) CPI Index (v.2)",
    "section": "",
    "text": "This blog recreates the blog post from yesterday, August 3, 2025, so that the contents of the table can be copied from the post.\nThe Relative Importance page of the BLS CPI website provides a spreadsheet of the weights of the components of the CPI index. These weights can be used to decompose aggregate indexes into changes of their components.\nThe most important decomposition of the CPI index is that of headline inflation into core inflation plus energy and food inflation.\nWhat other decompositions exist?\nFirst, by focusing on the “Special aggregate indexes” in table 1 of the Relative Importance spreadsheet we can construct the following groups of indexes that add up to the “All items” index. The easiest starting point is the group of indexes whose title begins with “All items less…”\n\nAll items less food\nAll items less shelter\nAll items less medical care\nAll items less energy\nAll items less food and energy\n\nBeside the above five indexes and the decomposition of Headline (all items) into core, we also have a breakdown of headline into commodities (goods) and services inflation.\n\n\n\n\n\n\n\n\nItem and Group\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAll items less food\n86.309\n84.834\nSA0L1\nCUSR0000SA0L1\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less shelter\n64.517\n66.814\nSA0L2\nCUSR0000SA0L2\n\n\nShelter\n35.483\n33.186\nSAH1\nCUSR0000SAH1\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less medical care\n91.727\n93.054\nSA0L5\nCUSR0000SA0L5\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less energy\n93.784\n92.214\nSA0LE\nCUSR0000SA0LE\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less food and energy\n80.094\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items\n100.001\n100.000\nSA0\nCUSR0000SA0\n\n\nCommodities\n36.201\n40.085\nSAC\nCUSR0000SAC\n\n\nServices\n63.799\n59.915\nSAS\nCUSR0000SAS\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nCommodities less food and energy commodities\n19.388\n20.750\nSACL1E\nCUSR0000SACL1E\n\n\nServices less energy services\n60.705\n56.298\nSASLE\nCUSR0000SASLE\n\n\nAll items less food and energy\n80.093\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\n\n\n\n\n\nSecond, if we ignore the “Special aggregate indexes” and group all the “Indent Level” 1 indexes, we obtain the following set of sub-indexes that add up to 100:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndent Level\nitem\nCPI-U\nCPI-W\n\n\n\n\n1\nFood and beverages\n14.526\n15.959\n\n\n1\nHousing\n44.201\n41.932\n\n\n1\nApparel\n2.480\n2.751\n\n\n1\nTransportation\n16.571\n19.290\n\n\n1\nMedical care\n8.273\n6.946\n\n\n1\nRecreation\n5.292\n4.499\n\n\n1\nEducation and communication\n5.732\n5.534\n\n\n1\nOther goods and services\n2.925\n3.089\n\n\n\n\nTotal\n100.000\n100.000\n\n\n\n\n\n\n\nThese eight indexes can be further decomposed into the key contributors. (We have also included the decomposition of food into food at home and away from home, thus there are nine groupings.)\n\n\n\n\n\n\n\n\nItem and Group\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nFood and beverages\n14.526\n15.959\nSAF\nCUSR0000SAF\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nAlcoholic beverages\n0.835\n0.793\nSAF116\nCUSR0000SAF116\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nFood at home\n8.043\n9.117\nSAF11\nCUSR0000SAF11\n\n\nFood away from home\n5.648\n6.049\nSEFV\nCUSR0000SEFV\n\n\nHousing\n44.201\n41.932\nSAH\nCUSR0000SAH\n\n\nShelter\n35.483\n33.186\nSAH1\nCUSR0000SAH1\n\n\nFuels and utilities\n4.312\n4.921\nSAH2\nCUSR0000SAH2\n\n\nHousehold furnishings and operations\n4.406\n3.824\nSAH3\nCUSR0000SAH3\n\n\nApparel\n2.480\n2.751\nSAA\nCUSR0000SAA\n\n\nMen's and boys' apparel\n0.654\n0.821\nSAA1\nCUSR0000SAA1\n\n\nWomen's and girls' apparel\n0.967\n0.937\nSAA2\nCUSR0000SAA2\n\n\nFootwear\n0.578\n0.700\nSEAE\nCUSR0000SEAE\n\n\nInfants' and toddlers' apparel\n0.102\n0.165\nSEAF\nCUSR0000SEAF\n\n\nJewelry and watches\n0.180\n0.128\nSEAG\nCUSR0000SEAG\n\n\nTransportation\n16.571\n19.290\nSAT\nCUSR0000SAT\n\n\nPrivate transportation\n15.103\n18.131\nSAT1\nCUSR0000SAT1\n\n\nPublic transportation\n1.468\n1.159\nSETG\nCUSR0000SETG\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nMedical care commodities\n1.527\n1.318\nSAM1\nCUSR0000SAM1\n\n\nMedical care services\n6.747\n5.628\nSAM2\nCUSR0000SAM2\n\n\nRecreation\n5.292\n4.499\nSAR\nCUSR0000SAR\n\n\nVideo and audio\n1.060\n1.040\nSERA\nCUSR0000SERA\n\n\nPets, pet products and services\n1.163\n1.073\nSERB\nCUSR0000SERB\n\n\nSporting goods\n0.480\n0.386\nSERC\nCUSR0000SERC\n\n\nPhotography\n0.075\n0.046\nSERD\nCUSR0000SERD\n\n\nOther recreational goods\n0.366\n0.354\nSERE\nCUSR0000SERE\n\n\nOther recreation services\n2.051\n1.554\nSERF\nCUSR0000SERF\n\n\nRecreational reading materials\n0.098\n0.048\nSERG\nCUSR0000SERG\n\n\nEducation and communication\n5.732\n5.534\nSAE\nCUSR0000SAE\n\n\nEducation\n2.583\n1.824\nSAE1\nCUSR0000SAE1\n\n\nCommunication\n3.149\n3.711\nSAE2\nCUSR0000SAE2\n\n\nOther goods and services\n2.925\n3.089\nSAG\nCUSR0000SAG\n\n\nTobacco and smoking products\n0.482\n0.800\nSEGA\nCUSR0000SEGA\n\n\nPersonal care\n2.443\n2.289\nSAG1\nCUSR0000SAG1"
  },
  {
    "objectID": "blog/post-20250804/Index.html#introduction",
    "href": "blog/post-20250804/Index.html#introduction",
    "title": "Decomposing the All items (Headline) CPI Index (v.2)",
    "section": "",
    "text": "This blog recreates the blog post from yesterday, August 3, 2025, so that the contents of the table can be copied from the post.\nThe Relative Importance page of the BLS CPI website provides a spreadsheet of the weights of the components of the CPI index. These weights can be used to decompose aggregate indexes into changes of their components.\nThe most important decomposition of the CPI index is that of headline inflation into core inflation plus energy and food inflation.\nWhat other decompositions exist?\nFirst, by focusing on the “Special aggregate indexes” in table 1 of the Relative Importance spreadsheet we can construct the following groups of indexes that add up to the “All items” index. The easiest starting point is the group of indexes whose title begins with “All items less…”\n\nAll items less food\nAll items less shelter\nAll items less medical care\nAll items less energy\nAll items less food and energy\n\nBeside the above five indexes and the decomposition of Headline (all items) into core, we also have a breakdown of headline into commodities (goods) and services inflation.\n\n\n\n\n\n\n\n\nItem and Group\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAll items less food\n86.309\n84.834\nSA0L1\nCUSR0000SA0L1\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less shelter\n64.517\n66.814\nSA0L2\nCUSR0000SA0L2\n\n\nShelter\n35.483\n33.186\nSAH1\nCUSR0000SAH1\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less medical care\n91.727\n93.054\nSA0L5\nCUSR0000SA0L5\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less energy\n93.784\n92.214\nSA0LE\nCUSR0000SA0LE\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nAll items less food and energy\n80.094\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items\n100.001\n100.000\nSA0\nCUSR0000SA0\n\n\nCommodities\n36.201\n40.085\nSAC\nCUSR0000SAC\n\n\nServices\n63.799\n59.915\nSAS\nCUSR0000SAS\n\n\nAll items\n100.000\n100.000\nSA0\nCUSR0000SA0\n\n\nCommodities less food and energy commodities\n19.388\n20.750\nSACL1E\nCUSR0000SACL1E\n\n\nServices less energy services\n60.705\n56.298\nSASLE\nCUSR0000SASLE\n\n\nAll items less food and energy\n80.093\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\n\n\n\n\n\nSecond, if we ignore the “Special aggregate indexes” and group all the “Indent Level” 1 indexes, we obtain the following set of sub-indexes that add up to 100:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndent Level\nitem\nCPI-U\nCPI-W\n\n\n\n\n1\nFood and beverages\n14.526\n15.959\n\n\n1\nHousing\n44.201\n41.932\n\n\n1\nApparel\n2.480\n2.751\n\n\n1\nTransportation\n16.571\n19.290\n\n\n1\nMedical care\n8.273\n6.946\n\n\n1\nRecreation\n5.292\n4.499\n\n\n1\nEducation and communication\n5.732\n5.534\n\n\n1\nOther goods and services\n2.925\n3.089\n\n\n\n\nTotal\n100.000\n100.000\n\n\n\n\n\n\n\nThese eight indexes can be further decomposed into the key contributors. (We have also included the decomposition of food into food at home and away from home, thus there are nine groupings.)\n\n\n\n\n\n\n\n\nItem and Group\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nFood and beverages\n14.526\n15.959\nSAF\nCUSR0000SAF\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nAlcoholic beverages\n0.835\n0.793\nSAF116\nCUSR0000SAF116\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nFood at home\n8.043\n9.117\nSAF11\nCUSR0000SAF11\n\n\nFood away from home\n5.648\n6.049\nSEFV\nCUSR0000SEFV\n\n\nHousing\n44.201\n41.932\nSAH\nCUSR0000SAH\n\n\nShelter\n35.483\n33.186\nSAH1\nCUSR0000SAH1\n\n\nFuels and utilities\n4.312\n4.921\nSAH2\nCUSR0000SAH2\n\n\nHousehold furnishings and operations\n4.406\n3.824\nSAH3\nCUSR0000SAH3\n\n\nApparel\n2.480\n2.751\nSAA\nCUSR0000SAA\n\n\nMen's and boys' apparel\n0.654\n0.821\nSAA1\nCUSR0000SAA1\n\n\nWomen's and girls' apparel\n0.967\n0.937\nSAA2\nCUSR0000SAA2\n\n\nFootwear\n0.578\n0.700\nSEAE\nCUSR0000SEAE\n\n\nInfants' and toddlers' apparel\n0.102\n0.165\nSEAF\nCUSR0000SEAF\n\n\nJewelry and watches\n0.180\n0.128\nSEAG\nCUSR0000SEAG\n\n\nTransportation\n16.571\n19.290\nSAT\nCUSR0000SAT\n\n\nPrivate transportation\n15.103\n18.131\nSAT1\nCUSR0000SAT1\n\n\nPublic transportation\n1.468\n1.159\nSETG\nCUSR0000SETG\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nMedical care commodities\n1.527\n1.318\nSAM1\nCUSR0000SAM1\n\n\nMedical care services\n6.747\n5.628\nSAM2\nCUSR0000SAM2\n\n\nRecreation\n5.292\n4.499\nSAR\nCUSR0000SAR\n\n\nVideo and audio\n1.060\n1.040\nSERA\nCUSR0000SERA\n\n\nPets, pet products and services\n1.163\n1.073\nSERB\nCUSR0000SERB\n\n\nSporting goods\n0.480\n0.386\nSERC\nCUSR0000SERC\n\n\nPhotography\n0.075\n0.046\nSERD\nCUSR0000SERD\n\n\nOther recreational goods\n0.366\n0.354\nSERE\nCUSR0000SERE\n\n\nOther recreation services\n2.051\n1.554\nSERF\nCUSR0000SERF\n\n\nRecreational reading materials\n0.098\n0.048\nSERG\nCUSR0000SERG\n\n\nEducation and communication\n5.732\n5.534\nSAE\nCUSR0000SAE\n\n\nEducation\n2.583\n1.824\nSAE1\nCUSR0000SAE1\n\n\nCommunication\n3.149\n3.711\nSAE2\nCUSR0000SAE2\n\n\nOther goods and services\n2.925\n3.089\nSAG\nCUSR0000SAG\n\n\nTobacco and smoking products\n0.482\n0.800\nSEGA\nCUSR0000SEGA\n\n\nPersonal care\n2.443\n2.289\nSAG1\nCUSR0000SAG1"
  },
  {
    "objectID": "blog/post-20250806/Index.html",
    "href": "blog/post-20250806/Index.html",
    "title": "Decomposing Headline and Core CPI",
    "section": "",
    "text": "The first purpose of the decomposition is develop an understand of what is driving changes in headline and core inflation. The second purpose is to have a handy reference.\nCore Inflation excludes energy and food. Food is defined as all food and non-alcoholic beverages, i.e., it excludes alcoholic beverages.\n\n\n\n\n\n\n\n\nItem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAll items\n100.001\n100.000\nSA0\nCUSR0000SA0\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items less food and energy\n80.094\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\n\n\n\n\n\nWe can decompose core CPI, All items less food and energy, as follows:\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAlcoholic beverages\n0.835\n0.793\nSAF116\nCUSR0000SAF116\n\n\nHousing excluding Household Energy\n40.968\n38.192\nNA\nDerived\n\n\nApparel\n2.480\n2.751\nSAA\nCUSR0000SAA\n\n\nTransportation excl Energy\n13.588\n15.244\nNA\nDerived\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nRecreation\n5.292\n4.499\nSAR\nCUSR0000SAR\n\n\nEducation and communication\n5.732\n5.534\nSAE\nCUSR0000SAE\n\n\nOther goods and services\n2.925\n3.089\nSAG\nCUSR0000SAG\n\n\n\n\n\n\n\nHousing excluding household energy and transportation excluding energy are derived as follows:\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nHousing excluding Household Energy\n40.968\n38.192\nNA\nNA\n\n\nHousehold energy\n3.233\n3.740\nSAH21\nCUSR0000SAH21\n\n\nHousing\n44.201\n41.932\nSAH\nCUSR0000SAH\n\n\n\n\n\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nTransportation excl energy\n13.588\n15.244\nNA\nNA\n\n\nTransportation\n16.571\n19.290\nSAT\nCUSR0000SAT\n\n\nMotor fuel\n2.983\n4.046\nSETB\nCUSR0000SETB"
  },
  {
    "objectID": "blog/post-20250806/Index.html#introduction",
    "href": "blog/post-20250806/Index.html#introduction",
    "title": "Decomposing Headline and Core CPI",
    "section": "",
    "text": "The first purpose of the decomposition is develop an understand of what is driving changes in headline and core inflation. The second purpose is to have a handy reference.\nCore Inflation excludes energy and food. Food is defined as all food and non-alcoholic beverages, i.e., it excludes alcoholic beverages.\n\n\n\n\n\n\n\n\nItem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAll items\n100.001\n100.000\nSA0\nCUSR0000SA0\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nAll items less food and energy\n80.094\n77.048\nSA0L1E\nCUSR0000SA0L1E\n\n\n\n\n\n\n\nWe can decompose core CPI, All items less food and energy, as follows:\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nAlcoholic beverages\n0.835\n0.793\nSAF116\nCUSR0000SAF116\n\n\nHousing excluding Household Energy\n40.968\n38.192\nNA\nDerived\n\n\nApparel\n2.480\n2.751\nSAA\nCUSR0000SAA\n\n\nTransportation excl Energy\n13.588\n15.244\nNA\nDerived\n\n\nMedical care\n8.273\n6.946\nSAM\nCUSR0000SAM\n\n\nRecreation\n5.292\n4.499\nSAR\nCUSR0000SAR\n\n\nEducation and communication\n5.732\n5.534\nSAE\nCUSR0000SAE\n\n\nOther goods and services\n2.925\n3.089\nSAG\nCUSR0000SAG\n\n\n\n\n\n\n\nHousing excluding household energy and transportation excluding energy are derived as follows:\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nHousing excluding Household Energy\n40.968\n38.192\nNA\nNA\n\n\nHousehold energy\n3.233\n3.740\nSAH21\nCUSR0000SAH21\n\n\nHousing\n44.201\n41.932\nSAH\nCUSR0000SAH\n\n\n\n\n\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nTransportation excl energy\n13.588\n15.244\nNA\nNA\n\n\nTransportation\n16.571\n19.290\nSAT\nCUSR0000SAT\n\n\nMotor fuel\n2.983\n4.046\nSETB\nCUSR0000SETB"
  },
  {
    "objectID": "blog/post-20250806/Index.html#food-and-energy-in-headline-inflation",
    "href": "blog/post-20250806/Index.html#food-and-energy-in-headline-inflation",
    "title": "Decomposing Headline and Core CPI",
    "section": "Food and Energy in headline inflation",
    "text": "Food and Energy in headline inflation\nFood is decomposed into food at home and food away from home.\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nFood\n13.691\n15.166\nSAF1\nCUSR0000SAF1\n\n\nFood at home\n8.043\n9.117\nSAF11\nCUSR0000SAF11\n\n\nFood away from home\n5.648\n6.049\nSEFV\nCUSR0000SEFV\n\n\n\n\n\n\n\nEnergy can be decomposed into energy from commodities and services\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nEnergy commodities\n3.122\n4.169\nSACE\nCUSR0000SACE\n\n\nEnergy services\n3.094\n3.617\nSEHF\nCUSR0000SEHF\n\n\n\n\n\n\n\nand also as the sum of household energy and motor fuel.\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nEnergy\n6.216\n7.786\nSA0E\nCUSR0000SA0E\n\n\nHousehold energy\n3.233\n3.740\nSAH21\nCUSR0000SAH21\n\n\nMotor fuel\n2.983\n4.046\nSETB\nCUSR0000SETB\n\n\n\n\n\n\n\nHousehold energy is made up of two components\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nHousehold energy\n3.233\n3.740\nSAH21\nCUSR0000SAH21\n\n\nFuel oil and other fuels\n0.139\n0.123\nSEHE\nCUSR0000SEHE\n\n\nEnergy services\n3.094\n3.617\nSEHF\nCUSR0000SEHF\n\n\n\n\n\n\n\nThere is no further breakdown of energy services that is found within the housing category.\nEnergy commodities are made up of types of fuel\n\n\n\n\n\n\n\n\nitem\nCPI-U\nCPI-W\nSeries Code\nSeries ID\n\n\n\n\nEnergy commodities\n3.122\n4.169\nSACE\nCUSR0000SACE\n\n\nMotor fuel\n2.983\n4.046\nSETB\nCUSR0000SETB\n\n\nFuel oil and other fuels\n0.139\n0.123\nSEHE\nCUSR0000SEHE"
  },
  {
    "objectID": "blog/post-20250811/index.html",
    "href": "blog/post-20250811/index.html",
    "title": "Introduction to Census trade data API”",
    "section": "",
    "text": "The landing page for trade data is https://www.census.gov/foreign-trade/index.html. A good starting point for learning how to use the API is the pdf International Trade Data API User Guide\nYou only need a Census Bureau API key if you will submit more than 500 API calls a day.\nThere are five components to each API query:\n\nlevel 0: the base URL &lt;“http://api.census.gov/data/timeseries/intltrade/”&gt;\nlevel 1: The choice of imports or exports\nlevel 2: the endpoint (commodity classification)\nlevel 3: the variables to download\nlevel 4: the clauses of the query\n\nThe nine endpoints are listed below along with their abbreviation for use in the query:\n\nhs: harmonized system\nstatehs: harmonized system by state\nporths: harmonized system by port\nnaics: North American Industry Classification System (NAICS )\nenduse: the end-use classification system that is used for the monthly FT900 trade report\nsitc: Standard International Trade Classification System SITC\nhitech: Advanced Technology\nusda: U.S. Department of Agriculture\n\nAppendixes A and B of the pdf list the variables that can be downloaded for exports and imports, respectively. However, there are some differences in the available variables for exports and imports so it is better to use the list of variables that is associated with each endpoint. The urls have the following format\nhttps://api.census.gov/data/timeseries/intltrade/[exports/imports]/[endpoint]/variables.html\nFor example, if you are downloading export data from the hs endpoint the url is\nhttps://api.census.gov/data/timeseries/intltrade/exports/hs/variables.html\nand if you are downloading import data from the enduse endpoint the url is\nhttps://api.census.gov/data/timeseries/intltrade/imports/enduse/variables.html\nThe key variables can be categorized as follows and are separated by a comma in the api call.\n\ncommodity code, commodity short and long description\nmonthly and year-to-date value of exports/imports\nmonthly and year-to-date quantity of exports/imports\ncountry name and country code of origin or destination\nshipping type, e.g. air, container, etc.\nport and district of origin or destination\n\nThe clauses of the query usually involve the selection of a date, time series, country, port, state or product type.\n\nspecific year and month: time=2013-03 or YEAR=2013&MONTH=03\ntime series: time=from+2013-01+to+2013-11\ncountry name: CTY NAME = Mexico\ncountry code: CTY CODE=2010 (2010 is the country code for Mexico)\nproduct type: I_COMMODITY=9504500000 is the clause for selecting imports of video games\n\nThe clauses of the query are separated by an ampersand, i.e. the query for imported video games from mexico for March 2013 would like:\nYEAR=2013&MONTH=03&CTY_ NAME=MEXICO&I_COMMODITY=9504500000\nNote\n\ncountry codes can be obtained from the Geographic Code section of the reference page.\nthe most comprehensive page for product codes is the concordance of the reference page. The concordance contains each product type and is listed for all of the endpoints.\nTake note that you should select the concordance for the appropriate year AND that imports and exports each have their own concordance.\nThere is a separate file that lists the structure of the concordance\nthere is an html page schedule B 2025 that provides more information about all of the schedule B goods.\n\nIt is easiest to demonstrate the structure of the api with actual api calls."
  },
  {
    "objectID": "blog/post-20250811/index.html#census-bureau",
    "href": "blog/post-20250811/index.html#census-bureau",
    "title": "Introduction to Census trade data API”",
    "section": "",
    "text": "The landing page for trade data is https://www.census.gov/foreign-trade/index.html. A good starting point for learning how to use the API is the pdf International Trade Data API User Guide\nYou only need a Census Bureau API key if you will submit more than 500 API calls a day.\nThere are five components to each API query:\n\nlevel 0: the base URL &lt;“http://api.census.gov/data/timeseries/intltrade/”&gt;\nlevel 1: The choice of imports or exports\nlevel 2: the endpoint (commodity classification)\nlevel 3: the variables to download\nlevel 4: the clauses of the query\n\nThe nine endpoints are listed below along with their abbreviation for use in the query:\n\nhs: harmonized system\nstatehs: harmonized system by state\nporths: harmonized system by port\nnaics: North American Industry Classification System (NAICS )\nenduse: the end-use classification system that is used for the monthly FT900 trade report\nsitc: Standard International Trade Classification System SITC\nhitech: Advanced Technology\nusda: U.S. Department of Agriculture\n\nAppendixes A and B of the pdf list the variables that can be downloaded for exports and imports, respectively. However, there are some differences in the available variables for exports and imports so it is better to use the list of variables that is associated with each endpoint. The urls have the following format\nhttps://api.census.gov/data/timeseries/intltrade/[exports/imports]/[endpoint]/variables.html\nFor example, if you are downloading export data from the hs endpoint the url is\nhttps://api.census.gov/data/timeseries/intltrade/exports/hs/variables.html\nand if you are downloading import data from the enduse endpoint the url is\nhttps://api.census.gov/data/timeseries/intltrade/imports/enduse/variables.html\nThe key variables can be categorized as follows and are separated by a comma in the api call.\n\ncommodity code, commodity short and long description\nmonthly and year-to-date value of exports/imports\nmonthly and year-to-date quantity of exports/imports\ncountry name and country code of origin or destination\nshipping type, e.g. air, container, etc.\nport and district of origin or destination\n\nThe clauses of the query usually involve the selection of a date, time series, country, port, state or product type.\n\nspecific year and month: time=2013-03 or YEAR=2013&MONTH=03\ntime series: time=from+2013-01+to+2013-11\ncountry name: CTY NAME = Mexico\ncountry code: CTY CODE=2010 (2010 is the country code for Mexico)\nproduct type: I_COMMODITY=9504500000 is the clause for selecting imports of video games\n\nThe clauses of the query are separated by an ampersand, i.e. the query for imported video games from mexico for March 2013 would like:\nYEAR=2013&MONTH=03&CTY_ NAME=MEXICO&I_COMMODITY=9504500000\nNote\n\ncountry codes can be obtained from the Geographic Code section of the reference page.\nthe most comprehensive page for product codes is the concordance of the reference page. The concordance contains each product type and is listed for all of the endpoints.\nTake note that you should select the concordance for the appropriate year AND that imports and exports each have their own concordance.\nThere is a separate file that lists the structure of the concordance\nthere is an html page schedule B 2025 that provides more information about all of the schedule B goods.\n\nIt is easiest to demonstrate the structure of the api with actual api calls."
  },
  {
    "objectID": "blog/post-20250811/index.html#simple-api-calls",
    "href": "blog/post-20250811/index.html#simple-api-calls",
    "title": "Introduction to Census trade data API”",
    "section": "Simple API calls",
    "text": "Simple API calls\nThe pdf lists sample calls on pages 14 and 15. These can be cut-and-pasted into a browser.\nIn R it is easy to use the package httr to implement the api call and the package jsonlite to extract the data.\nOn May 4 2025, in Apollo’s The Daily Spark, it was noted that 97% of baby carriages were imported from China. Can we verify this? Here is a list of the level information required to do so:\n\nlevel 1: imports\nlevel 2: harmonized system - we want a specific commodity so we use a granular index\nlevel 3: commodity name, dollar amount imported, we can find the variable names permitted at the url https://api.census.gov/data/timeseries/intltrade/imports/hs/variables.html&gt;\nlevel 4: query for baby carriage imports from all countries in 2024 the most recent complete year where the hs code for baby carriages is 8715000020.\n\nWe convert this to a API call as follows:\n\nlibrary(httr)\nlibrary(jsonlite)\n\nl0 &lt;- \"https://api.census.gov/data/timeseries/intltrade/\"\nl1 &lt;- \"imports\"\nl2 &lt;- \"hs\"\nl3 &lt;- \"I_COMMODITY_SDESC,GEN_VAL_YR,CTY_CODE,CTY_NAME\"\nl4 &lt;- \"YEAR=2024&MONTH=12&I_COMMODITY=8715000020\"\n\napi_call &lt;- paste0(l0,l1,\"/\",l2,\"?get=\",l3,\"&\",l4)\n\nres &lt;- GET(api_call)\n\npredf &lt;- fromJSON(rawToChar(res$content) )\n\ndf &lt;- as.data.frame(predf[2:nrow(predf),])\nnames(df) &lt;- predf[1,]\n\ndf$GEN_VAL_YR &lt;- as.numeric(df$GEN_VAL_YR)\n\nView(df)\n\nComments about the R code:\n\nI_COMMODITY is the variable name for the commodity code\nI_COMMODITY_SDESC is the variable name for the short description of the commodity\nGEN VAL YR is the variable name for Year-to-Date General Imports, Total Value\nGEN_VAL_YR is read in as a character so has to be converted to numeric\n\nhttps://api.census.gov/data/timeseries/intltrade/imports/hs?get=I_COMMODITY_SDESC,GEN_VAL_YR,CTY_CODE,CTY_NAME&YEAR=2024&MONTH=12&I_COMMODITY=8715000020\n\n\n\nData sorted in descending order of GEN_VAL_YR\n\n\nTotal imports from all countries in 2024 was $358,702,390 and the imports from China was $348,697,326 which is 97.21%"
  },
  {
    "objectID": "blog/post-20250811/index.html#misc",
    "href": "blog/post-20250811/index.html#misc",
    "title": "Introduction to Census trade data API”",
    "section": "Misc",
    "text": "Misc\nThe international trade API Query Builder tool highlights the key inputs for a query.\nYou can sign up for an API at the following url https://usatrade.census.gov/"
  },
  {
    "objectID": "blog/post-20250811b/Index.html",
    "href": "blog/post-20250811b/Index.html",
    "title": "Census Bureau API: Baby Carriages",
    "section": "",
    "text": "Torsten Slok, Apollo’s Chief Economist, post the import China for a number of products at his daily spark website. The first product category is baby carriages. 97% of baby carriages are imported from China. Can we verify this?"
  },
  {
    "objectID": "blog/post-20250811b/Index.html#introduction",
    "href": "blog/post-20250811b/Index.html#introduction",
    "title": "Census Bureau API: Baby Carriages",
    "section": "",
    "text": "Torsten Slok, Apollo’s Chief Economist, post the import China for a number of products at his daily spark website. The first product category is baby carriages. 97% of baby carriages are imported from China. Can we verify this?"
  },
  {
    "objectID": "blog/post-20250811b/Index.html#the-census-bureau-trade-data-api",
    "href": "blog/post-20250811b/Index.html#the-census-bureau-trade-data-api",
    "title": "Census Bureau API: Baby Carriages",
    "section": "The Census Bureau Trade Data API",
    "text": "The Census Bureau Trade Data API\nThe API call has five components: a common base url and four additional requirements. The base url is\nhttps://api.census.gov/data/timeseries/intltrade/\nand the additional four requirements are:\n\nThe selection of type of trade, imports or exports.\nThe selection of one of nine endpoints, i.e. one of nine commodity classification systems.\nThe list of variables to be downloaded\nThe query for the API request"
  },
  {
    "objectID": "blog/post-20250811b/Index.html#baby-carriage-codes",
    "href": "blog/post-20250811b/Index.html#baby-carriage-codes",
    "title": "Census Bureau API: Baby Carriages",
    "section": "Baby Carriage codes",
    "text": "Baby Carriage codes\nFirst, to confirm the import of baby carriages from China, our focus is on imports.\nSecond, we will use the classification of baby carriages within the harmonized tariff system (HTS). The reference page of the trade data of the Census bureau has a concordance for imports and exports. One can read the file into R and grep for “carriages” or use ctrl-F to search for “carriages” on the webpage. We find the following two HTS codes:\n\n8715000020 BABY CARRIAGES (INCLUDING STROLLERS)\n8715000040 PARTS OF BABY CARRIAGES\n\nWe will use the first four digits to download both categories.\nThird, we can search for the variables we want to download using the following url:\nhttps://api.census.gov/data/timeseries/intltrade/imports/hs/variables.html\nwhere the selection of “imports” is consistent with our first choice above and “hs” is the abbreviation for the HTS.\nWe will select the following variables:\n\nI_COMMODITY: the commodity code for the import\nI_COMMODITY_SDESC: the short description for the import associated with the commodity code\nGEN_VAL_YR: 15-digit Year-to-Date General Imports, Total Value\nCTY_CODE: the country code\nCTY_NAME: the country name\n\nThe fourth item is the filter or query: we want the trade data from January 2024 and we want to select all the 10-digit hs codes that fall within the 4-digit HS code “8715”."
  },
  {
    "objectID": "blog/post-20250811b/Index.html#r-code",
    "href": "blog/post-20250811b/Index.html#r-code",
    "title": "Census Bureau API: Baby Carriages",
    "section": "R code",
    "text": "R code\nIn the code below, we list the base url and the four additional inputs, l1 to l4. These five strings are concated uisng the paste0 function. It is important to note that the string “?get=” follows the endpoint, each variable is separated by a comma and the clauses of the query are separated by ampersands. The asterisk at the end of “8715*” is a wild card that allows all ten digit HTS commodities that begin with the same 4-digits to be pulled.\n\nbase &lt;- \"https://api.census.gov/data/timeseries/intltrade/\"\n\nl1 &lt;- \"imports\"\nl2 &lt;- \"hs\"\nl3 &lt;- \"I_COMMODITY_SDESC,GEN_VAL_YR,CTY_CODE,CTY_NAME\"\nl4 &lt;- \"time=from+2024-01&I_COMMODITY=87150*\"\n\napi_call &lt;- paste0(base,l1,\"/\",l2,\"?get=\",l3,\"&\",l4)\n\nprint(api_call)\n\n[1] \"https://api.census.gov/data/timeseries/intltrade/imports/hs?get=I_COMMODITY_SDESC,GEN_VAL_YR,CTY_CODE,CTY_NAME&time=from+2024-01&I_COMMODITY=87150*\"\n\n\nThe api call can be cut-and-pasted into a browser to retrieve the data or one can use the GET function of the httr package to retrieve the data so that it can be manipulated in R.\nThe jsonlite package is required because the API returns data in the JSON format.\n\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(gt)\n\nres &lt;- GET(api_call)\n\npredf &lt;- fromJSON(rawToChar(res$content))\n\ndf &lt;- as.data.frame(predf[2:nrow(predf), ])\nnames(df) &lt;- predf[1, ]\n\nhead(df)\n\n                                 I_COMMODITY_SDESC GEN_VAL_YR CTY_CODE\n1 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF   35654928        -\n2 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     131842     0003\n3 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF   35337098     0014\n4 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     183241     0020\n5 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     183241     0021\n6 BABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF     318051     0022\n                         CTY_NAME    time I_COMMODITY\n1         TOTAL FOR ALL COUNTRIES 2024-01      871500\n2                  EUROPEAN UNION 2024-01      871500\n3           PACIFIC RIM COUNTRIES 2024-01      871500\n4                   USMCA (NAFTA) 2024-01      871500\n5 TWENTY LATIN AMERICAN REPUBLICS 2024-01      871500\n6                            OECD 2024-01      871500\n\n\n We can confirm that the API call has returned the data we requested including a 6-digit aggregation.\n\ndf %&gt;% dplyr::count(I_COMMODITY,I_COMMODITY_SDESC) %&gt;% gt()\n\n\n\n\n\n\n\nI_COMMODITY\nI_COMMODITY_SDESC\nn\n\n\n\n\n871500\nBABY CARRIAGES (INC STROLLERS) AND PARTS THEREOF\n537\n\n\n8715000020\nBABY CARRIAGES (INCLUDING STROLLERS)\n468\n\n\n8715000040\nPARTS OF BABY CARRIAGES\n422\n\n\n\n\n\n\n\n\nThe variable GEN_VAL_YR, the year-to-date value of imports, is converted to numeric because it is read in as a string. By selecting the “time” variable that has the 12th month, we can obtain the annual value of imports.\n\ndf$GEN_VAL_YR &lt;- as.numeric(df$GEN_VAL_YR)\n\ndfa &lt;- df[substring(df$time,6,7)==\"12\",]\n\nWhen downloading country code (CTY_CODE) and country name (CTY_NAME), we also obtain imports by various regions, e.g. “European Union”, Pacific Rim Countries”, etc. The table available in Appendix E of the API User Guide lists the country groupings. It is useful to save this table as a csv file so that it can be used to omit country groupings when not needed. In addition to the country groupings, total imports is also included and this can be excluded if not needed.\n\n\npath &lt;- \"G:\\\\My Drive\\\\Research\\\\Trade Data\\\\\"\nfn &lt;- paste0(path,\"Appendix_E_Country_Grouping_Codes.csv\")\n\ncountry_groupings &lt;- read.csv(fn)\n\ndfac &lt;- dfa[!(dfa$CTY_CODE %in% country_groupings$CTY_CODE),]\n\ndfac &lt;- dfac[grepl(\"TOTAL\",dfac$CTY_NAME) == FALSE,]\n\n#head(dfac)\n\n\n\n\nhead(df)\n\n\nFinally, we can use the 6-digit HS code to select the aggregate of baby strollers (8715000020) and baby stroller parts (8715000040)\n\ndfac6 &lt;- dfac[dfac$I_COMMODITY == \"871500\",]\n\ntotal_imports &lt;- sum(dfac6$GEN_VAL_YR)\n\ndfac6$perc &lt;- round(100*dfac6$GEN_VAL_YR/total_imports,2)\n\ndfac6 &lt;- dfac6[order(dfac6$perc,decreasing = TRUE),]\n\n#head(dfac6)\n\n\n\n\nhead(df)\n\n\nWe find that 97% of baby strollers and bay stroller parts were imported from China in 2024.\nWhat proportion of the total imports $392.5M is baby strollers and what is parts?\n\nstrollers &lt;-  dfac[dfac$I_COMMODITY == \"8715000020\",]\nparts &lt;-  dfac[dfac$I_COMMODITY == \"8715000040\",]\n\nsm &lt;- round( sum(strollers$GEN_VAL_YR)/1e6,2)\npm &lt;- round(sum(parts$GEN_VAL_YR)/1e6,2)\n\npp &lt;- round(100*(pm/(sm+pm)),2)\n\nWe import $358.79M strollers and $33.71M parts, so parts only make up 8.59% of the total."
  },
  {
    "objectID": "blog/post-20251014/index.html",
    "href": "blog/post-20251014/index.html",
    "title": "ETA 539 - Weekly Claims and Extended Benefits Trigger Data”",
    "section": "",
    "text": "The ETA 539 is available from the data downloads page of the Employment and Training Administration.\nThe following definitions are from the UI REPORTS HANDBOOK NO. 401, the “ETA 539 Weekly Claims and Extended Benefits Trigger Date”.\n\nIC - State UI Initial Claims less intrastate transitionals.\nFIC - UCFE - no UI Initial Claims. (UCFE = “Unemployment compensation for Federal employees”)\nXIC - UCX only Initial Claims (UCX is Unemployment Compensation for Ex-servicemembers.)\nWSIC - STC or workshare total initial claims. (STC is Short-Time Compensation.)\nWSEIC - STC or workshare equivalent initial claims\nCW - State UI adjusted continued weeks (CW) claimed\nFCW - UCFE-no UI adjusted continued weeks claimed\nXCW - UCX only adjusted continued weeks claimed\nWSCW - STC or workshare total continued weeks claimed\nWSECW - STC or workshare equivalent continued weeks claimed\nEBT - Total continued weeks claimed under the Federal/State Extended Benefit Program–includes all intrastate and interstate continued weeks claimed filed from an agent State under the State UI, UCFE and UCX programs.\nEBUI - That part of EBT which represents only State UI weeks claimed under the Federal/State EB program.\nABT - Total continued weeks claimed under a State additional benefit program for those States which have such a program. (Includes UCFE and UCX.)\nABUI - That part of ABT which represents only State UI additional continued weeks claimed for those States which have such a program.\nAT - Average adjusted Total Continued Weeks Claimed. Report the average of the sum of the CW and WSECW figures for the most recent calendar week of unemployment experience and the immediately previous 12 calendar weeks of unemployment experience (CW+WSECW) divided by 13; i.e.,\n\n\\[\nAT =  \\frac{1}{13} \\sum_{i=1}^{13} \\left( CWI_{i} + WSECW_{i} \\right)\n\\]\n\nCE - Covered Employment. Report the 12-month average monthly covered employment for the first 4 of the last 6 completed calendar quarters prior to the end of the last week of the current 13-week period to which the insured unemployment data relate. This figure will change only once each quarter, as specified in section F.9. above.\nR - Rate of Insured Unemployment. Report the rate of insured unemployment for the current 13-week period. The insured unemployment rate for a 13-week period is the result of dividing the average adjusted total continued weeks claimed (AT) by the covered employment (CE); i.e., \\[\nR = \\frac{AT}{CE}\n\\]\nAR - Average Rate of Insured Unemployment in Prior Two Years. Report the average of the rates of insured unemployment for the corresponding 13-week periods in the prior 2 years (See E.6. above). The average rates in each of the 2 prior years is computed as the sum of the two rates divided by 2; i.e., \\[\nAR = \\frac{R1 + R2}{2}\n\\] where \\(R1\\) and \\(R2\\) refer to the rates for the corresponding 13-week period of 1 year ago and 2 years ago, respectively.\nP. Current Rate as Percent of Average Rate in Prior Two Years. This percent is defined as: \\[\nP = \\frac{R}{AR}\n\\]\nStatus (B or E) - Indicate the beginning (B) or ending (E) of a State extended benefit period.\nChange Date - If Status has changed since the prior week, enter the date the change is effective.\n\nNote: Chapter 4, “Extensions and Special Programs”, has a lot of information about the abbreviations used above."
  },
  {
    "objectID": "blog/post-20251014/index.html#introduction",
    "href": "blog/post-20251014/index.html#introduction",
    "title": "ETA 539 - Weekly Claims and Extended Benefits Trigger Data”",
    "section": "",
    "text": "The ETA 539 is available from the data downloads page of the Employment and Training Administration.\nThe following definitions are from the UI REPORTS HANDBOOK NO. 401, the “ETA 539 Weekly Claims and Extended Benefits Trigger Date”.\n\nIC - State UI Initial Claims less intrastate transitionals.\nFIC - UCFE - no UI Initial Claims. (UCFE = “Unemployment compensation for Federal employees”)\nXIC - UCX only Initial Claims (UCX is Unemployment Compensation for Ex-servicemembers.)\nWSIC - STC or workshare total initial claims. (STC is Short-Time Compensation.)\nWSEIC - STC or workshare equivalent initial claims\nCW - State UI adjusted continued weeks (CW) claimed\nFCW - UCFE-no UI adjusted continued weeks claimed\nXCW - UCX only adjusted continued weeks claimed\nWSCW - STC or workshare total continued weeks claimed\nWSECW - STC or workshare equivalent continued weeks claimed\nEBT - Total continued weeks claimed under the Federal/State Extended Benefit Program–includes all intrastate and interstate continued weeks claimed filed from an agent State under the State UI, UCFE and UCX programs.\nEBUI - That part of EBT which represents only State UI weeks claimed under the Federal/State EB program.\nABT - Total continued weeks claimed under a State additional benefit program for those States which have such a program. (Includes UCFE and UCX.)\nABUI - That part of ABT which represents only State UI additional continued weeks claimed for those States which have such a program.\nAT - Average adjusted Total Continued Weeks Claimed. Report the average of the sum of the CW and WSECW figures for the most recent calendar week of unemployment experience and the immediately previous 12 calendar weeks of unemployment experience (CW+WSECW) divided by 13; i.e.,\n\n\\[\nAT =  \\frac{1}{13} \\sum_{i=1}^{13} \\left( CWI_{i} + WSECW_{i} \\right)\n\\]\n\nCE - Covered Employment. Report the 12-month average monthly covered employment for the first 4 of the last 6 completed calendar quarters prior to the end of the last week of the current 13-week period to which the insured unemployment data relate. This figure will change only once each quarter, as specified in section F.9. above.\nR - Rate of Insured Unemployment. Report the rate of insured unemployment for the current 13-week period. The insured unemployment rate for a 13-week period is the result of dividing the average adjusted total continued weeks claimed (AT) by the covered employment (CE); i.e., \\[\nR = \\frac{AT}{CE}\n\\]\nAR - Average Rate of Insured Unemployment in Prior Two Years. Report the average of the rates of insured unemployment for the corresponding 13-week periods in the prior 2 years (See E.6. above). The average rates in each of the 2 prior years is computed as the sum of the two rates divided by 2; i.e., \\[\nAR = \\frac{R1 + R2}{2}\n\\] where \\(R1\\) and \\(R2\\) refer to the rates for the corresponding 13-week period of 1 year ago and 2 years ago, respectively.\nP. Current Rate as Percent of Average Rate in Prior Two Years. This percent is defined as: \\[\nP = \\frac{R}{AR}\n\\]\nStatus (B or E) - Indicate the beginning (B) or ending (E) of a State extended benefit period.\nChange Date - If Status has changed since the prior week, enter the date the change is effective.\n\nNote: Chapter 4, “Extensions and Special Programs”, has a lot of information about the abbreviations used above."
  }
]